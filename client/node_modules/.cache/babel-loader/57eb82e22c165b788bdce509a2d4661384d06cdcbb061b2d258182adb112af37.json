{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ouzin\\\\OneDrive\\\\Desktop\\\\ww-webapp\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// Register.js\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleRegister = async () => {\n    try {\n      // Make an HTTP POST request to the registration endpoint\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n\n      // Check the response status\n      if (response.ok) {\n        console.log('Registration successful!');\n        // Optionally, you can redirect the user to another page upon successful registration\n      } else {\n        const data = await response.json();\n        console.error('Registration failed:', data.error);\n      }\n    } catch (error) {\n      console.error('Error during registration:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Button","Form","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","handleRegister","response","fetch","method","headers","body","JSON","stringify","ok","console","log","data","json","error","message","className","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","e","target","value","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ouzin/OneDrive/Desktop/ww-webapp/client/src/components/Register.js"],"sourcesContent":["// Register.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      // Make an HTTP POST request to the registration endpoint\r\n      const response = await fetch('http://localhost:5000/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      // Check the response status\r\n      if (response.ok) {\r\n        console.log('Registration successful!');\r\n        // Optionally, you can redirect the user to another page upon successful registration\r\n      } else {\r\n        const data = await response.json();\r\n        console.error('Registration failed:', data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during registration:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicUsername\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(e) => setUsername(e.target.value)} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"success\" onClick={handleRegister}>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}