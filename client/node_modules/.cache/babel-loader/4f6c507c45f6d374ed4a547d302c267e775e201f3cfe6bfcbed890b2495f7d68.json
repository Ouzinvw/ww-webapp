{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ouzin\\\\OneDrive\\\\Desktop\\\\ww-webapp\\\\client\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleRegister = () => {\n    // Implement your registration logic here\n    // Send a request to the server to store user information in the MongoDB cluster\n    // You can use fetch or axios to make an HTTP request to your server\n    // For simplicity, let's assume registration is successful for any input\n    console.log('Registration successful!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          variant: \"success\",\n          className: \"ml-2\",\n          children: \"Back to login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Button","Form","Link","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","handleRegister","console","log","className","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","e","target","value","to","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ouzin/OneDrive/Desktop/ww-webapp/client/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = () => {\r\n    // Implement your registration logic here\r\n    // Send a request to the server to store user information in the MongoDB cluster\r\n    // You can use fetch or axios to make an HTTP request to your server\r\n    // For simplicity, let's assume registration is successful for any input\r\n    console.log('Registration successful!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicUsername\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(e) => setUsername(e.target.value)} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n        </Form.Group>\r\n        <Link to=\"/\">\r\n          <p variant=\"success\" className=\"ml-2\">\r\n            Back to login\r\n          </p>\r\n        </Link>\r\n        <Button variant=\"success\" onClick={handleRegister}>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}