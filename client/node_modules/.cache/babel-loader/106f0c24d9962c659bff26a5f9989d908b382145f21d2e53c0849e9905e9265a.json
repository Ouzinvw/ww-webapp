{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ouzin\\\\OneDrive\\\\Desktop\\\\ww-webapp\\\\client\\\\src\\\\components\\\\WeatherAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAPI = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    // Fetch weather data from your API and update the state\n    // Example: fetch('your_api_endpoint').then(response => response.json()).then(data => setWeatherData(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weatherData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [data.timestamp, \": \", data.temperature, \"\\xB0C, \", data.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, data.timestamp, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherAPI, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = WeatherAPI;\nexport default WeatherAPI;\nvar _c;\n$RefreshReg$(_c, \"WeatherAPI\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherAPI","_s","weatherData","setWeatherData","children","map","data","timestamp","temperature","description","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ouzin/OneDrive/Desktop/ww-webapp/client/src/components/WeatherAPI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherAPI = () => {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch weather data from your API and update the state\r\n    // Example: fetch('your_api_endpoint').then(response => response.json()).then(data => setWeatherData(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Render weather data in the desired format */}\r\n      {weatherData.map((data) => (\r\n        <div key={data.timestamp}>\r\n          {/* Display weather data */}\r\n          <p>{data.timestamp}: {data.temperature}Â°C, {data.description}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherAPI;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEE,OAAA;IAAAK,QAAA,EAEGF,WAAW,CAACG,GAAG,CAAEC,IAAI,iBACpBP,OAAA;MAAAK,QAAA,eAEEL,OAAA;QAAAK,QAAA,GAAIE,IAAI,CAACC,SAAS,EAAC,IAAE,EAACD,IAAI,CAACE,WAAW,EAAC,SAAI,EAACF,IAAI,CAACG,WAAW;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GAFzDP,IAAI,CAACC,SAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGnB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBID,UAAU;AAAAc,EAAA,GAAVd,UAAU;AAqBhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}